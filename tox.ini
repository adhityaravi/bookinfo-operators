[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, fmt, integration, unit, lint-{details,ratings,reviews,productpage,libs}, static-{details,ratings,reviews,productpage,libs}
min_version = 4.0.0

[vars]
uv_flags = --frozen --isolated --extra=dev

[testenv]
allowlist_externals = uv
setenv =
    PYTHONPATH = {toxinidir}
    PY_COLORS = 1
passenv = 
    PYTHONPATH
    HOME
    PATH
    MODEL_SETTINGS
    HTTP_PROXY
    HTTPS_PROXY
    NO_PROXY

[testenv:lint-{details,ratings,reviews,productpage,libs}]
description = Run linting for {envname}
changedir = 
    details: charms/bookinfo-details-k8s
    ratings: charms/bookinfo-ratings-k8s
    reviews: charms/bookinfo-reviews-k8s
    productpage: charms/bookinfo-productpage-k8s
    libs: charms/bookinfo-libs-k8s
commands =
    uv run {[vars]uv_flags} codespell src tests
    uv run {[vars]uv_flags} ruff check src tests
    uv run {[vars]uv_flags} ruff format --check src tests

[testenv:static-{details,ratings,reviews,productpage,libs}]
description = Run static type checking for {envname}
changedir = 
    details: charms/bookinfo-details-k8s
    ratings: charms/bookinfo-ratings-k8s
    reviews: charms/bookinfo-reviews-k8s
    productpage: charms/bookinfo-productpage-k8s
    libs: charms/bookinfo-libs-k8s
setenv =
    PYTHONPATH = {toxinidir}/src:{toxinidir}/lib
commands =
    uv run {[vars]uv_flags} pyright src

[testenv:fmt-{details,ratings,reviews,productpage,libs}]
description = Apply automatic formatting for {envname}
changedir = 
    details: charms/bookinfo-details-k8s
    ratings: charms/bookinfo-ratings-k8s
    reviews: charms/bookinfo-reviews-k8s
    productpage: charms/bookinfo-productpage-k8s
    libs: charms/bookinfo-libs-k8s
commands =
    uv run {[vars]uv_flags} ruff format src tests
    uv run {[vars]uv_flags} ruff check --fix src tests

[testenv:unit-{details,ratings,reviews,productpage}]
description = Run unit tests for {envname}
changedir = 
    details: charms/bookinfo-details-k8s
    ratings: charms/bookinfo-ratings-k8s
    reviews: charms/bookinfo-reviews-k8s
    productpage: charms/bookinfo-productpage-k8s
setenv =
    PYTHONPATH = {toxinidir}/src:{toxinidir}/lib:{changedir}/lib
    PY_COLORS = 1
commands =
    uv run {[vars]uv_flags} coverage run --source={toxinidir}/src -m pytest -v {toxinidir}/tests/unit -k {envname} {posargs}
    uv run {[vars]uv_flags} coverage report

[testenv:unit]
description = Run unit tests for all charms
setenv =
    PYTHONPATH = {toxinidir}/src:{toxinidir}/lib
    PY_COLORS = 1
commands =
    uv run {[vars]uv_flags} coverage run --source=src -m pytest -v tests/unit {posargs}
    uv run {[vars]uv_flags} coverage report

[testenv:integration-{details,ratings,reviews,productpage}]
description = Run integration tests for {envname}
changedir = 
    details: charms/bookinfo-details-k8s
    ratings: charms/bookinfo-ratings-k8s
    reviews: charms/bookinfo-reviews-k8s
    productpage: charms/bookinfo-productpage-k8s
setenv =
    PYTHONPATH = {toxinidir}/src:{toxinidir}/lib:{changedir}/lib
    PY_COLORS = 1
commands =
    uv run {[vars]uv_flags} pytest -v tests/integration {posargs}

[testenv:integration]
description = Run integration tests for all charms
setenv =
    PYTHONPATH = {toxinidir}/src:{toxinidir}/lib
    PY_COLORS = 1
commands =
    uv run {[vars]uv_flags} pytest -v tests/integration {posargs}

[testenv:sync-lib]
description = Sync bookinfo library to all charm services
allowlist_externals = bash
commands =
    bash {toxinidir}/scripts/sync-library.sh

[testenv:lock-{details,ratings,reviews,productpage,libs}]
description = Update uv.lock for {envname}
changedir = 
    details: charms/bookinfo-details-k8s
    ratings: charms/bookinfo-ratings-k8s
    reviews: charms/bookinfo-reviews-k8s
    productpage: charms/bookinfo-productpage-k8s
    libs: charms/bookinfo-libs-k8s
commands =
    uv lock --upgrade --no-cache

[testenv:lock]
description = Update uv.lock for all charms
allowlist_externals = bash
commands =
    bash {toxinidir}/scripts/lock-all.sh

[testenv:lint]
description = Run linting for all charms
allowlist_externals = bash
commands =
    bash -c "for charm in details ratings reviews productpage libs; do echo \"Linting $charm...\"; ./venv/bin/tox -e lint-$charm || exit 1; done"

[testenv:fmt]
description = Apply automatic formatting for all charms  
allowlist_externals = bash
commands =
    bash -c "for charm in details ratings reviews productpage libs; do echo \"Formatting $charm...\"; ./venv/bin/tox -e fmt-$charm || exit 1; done"
