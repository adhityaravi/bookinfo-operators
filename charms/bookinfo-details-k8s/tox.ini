[tox]
no_package = True
skip_missing_interpreters = True
env_list = fmt, lint, unit, integration, static
min_version = 4.0.0

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
all_path = {[vars]src_path} {[vars]tst_path}
uv_flags = --frozen --isolated --extra=dev

[testenv]
allowlist_externals = uv
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=pdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:lock]
description = Update uv.lock with the latest deps
commands =
    uv lock --upgrade --no-cache

[testenv:fmt]
aliases = format
description = Apply coding style standards to code
commands =
    uv run {[vars]uv_flags} ruff format {[vars]all_path}
    uv run {[vars]uv_flags} ruff check --fix {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands =
    uv run {[vars]uv_flags} codespell {[vars]all_path}
    uv run {[vars]uv_flags} ruff check {[vars]all_path}
    uv run {[vars]uv_flags} ruff format --check {[vars]all_path}

[testenv:unit]
description = Run unit tests
commands =
    uv run {[vars]uv_flags} coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}integration -v --tb native -s {posargs}
    uv run {[vars]uv_flags} coverage report

[testenv:integration]
description = Run integration tests
commands =
    uv run {[vars]uv_flags} pytest -v --tb native {[vars]tst_path}integration --log-cli-level=INFO -s {posargs}

[testenv:static]
description = Run static type checking
commands =
    uv run {[vars]uv_flags} pyright src